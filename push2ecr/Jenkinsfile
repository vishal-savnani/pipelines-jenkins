pipeline {
    agent any
    environment {
        AWS_REGION = "eu-west-2"
        version = "$BUILD_NUMBER"
        CLUSTER = "my-fargate-cluster"
        SERVICE = "my-fargate-service"
        
    }
    stages {
        stage('checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'jenkins', url: 'https://github.com/vishal-savnani/Jenkins-projects.git']])
            }
            }
        stage('building') {
            steps {
                withCredentials([string(credentialsId: 'image', variable: 'image')]) {
                echo "Building image now"
                cd csv-filter-ui
                sh 'docker build -t $image:$version .'
                } 
            } 
            }
        stage("Push image") {
            environment {
                docker = credentials('docker')
            }
            
            steps {
                 withCredentials([string(credentialsId: 'image', variable: 'image')]) {
                 sh 'echo "$docker_PSW" | docker login -u $docker_USR --password-stdin'
                 sh 'docker push $image:$version'
            }
            }
        }
        stage("Checking psuh to ECR") {
            steps {
                withCredentials([
                    usernamePassword(credentialsId: 'aws-ecr-credential',
                                     usernameVariable: 'AWS_ACCESS_KEY_ID',
                                     passwordVariable: 'AWS_SECRET_ACCESS_KEY'),
                    string(credentialsId: 'aw_account_id', variable: 'AWS_ACCOUNT_ID'),
                    string(credentialsId: 'flask-web-repo', variable: 'ECR_REPO'),
                    string(credentialsId: 'image', variable: 'image')]) {

                     sh '''
                     aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
                     docker tag $image:$version ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${image}:$version
                     docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${image}:$version

                     '''
                    }
            }
        }
        }
}
